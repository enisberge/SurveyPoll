@{
    ViewData["Title"] = "Sorular";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles{
    <style>
        a.disabled {
            pointer-events: none;
            cursor: default;
        }

        .alert-success.new {
            background: none;
            border: none;
            border-left: 4px solid green;
            border-radius: 0;
            background: #fff;
            box-shadow: 1px 1px 4px rgba(0, 0, 0, .2);
        }

        .alert-success.new2 {
            background: #f3f8f3;
            border: none;
            border-left: 4px solid #45D298;
            border-radius: 0;
            box-shadow: 1px 1px 4px rgba(0, 0, 0, .2);
        }

            .alert-success.new2.p-4 {
                padding: 0.55rem 0.55rem !important;
            }

            .alert-success.new2 .fa {
                color: #45D298;
                display: table-cell;
                text-align: center;
                vertical-align: middle;
                font-size: 30px;
            }

        .alert-success .alert-body {
            padding-left: 0.55rem;
            display: table-cell;
            color: rgba(0,0,0,0.5);
        }

        .alert-success .alert-header {
            font-weight: 700;
            color: #45D298;
            padding: 0;
            margin: 0;
        }

        .toast-error {
            background-color: brown;
            color: white;
        }

        .toast-success {
            background-color: darkgreen;
            color: white;
        }
    </style>

}
<div class="col-lg-12">
    <div class="card shadow">
        <div class="card-header">
            <div class="row">
                <div class="col-md-8">
                    <h6 class="card-title mb-0 text-primary">Sorular</h6>
                </div>
                <div class="col-md-4">
                    <a class="btn btn-primary btn-sm float-right" id="btnNew">Soru Ekle</a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="container">
                <div class="row" id="QuestionListContainer">
                </div>
                <nav aria-label="Page navigation example">
                    <ul class="pagination">
                    </ul>
                </nav>
            </div>
        </div>

    </div>
    <div class="modal fade" id="addQuestionModal" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Soru Ekle</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form id="addQuestionForm">
                    <div class="modal-body">
                        <div class="form-group row">
                            <label for="title" class="col-sm-2 col-form-label">Soru</label>
                            <div class="col-sm-10">
                                <textarea class="form-control" id="title" rows="3"></textarea>
                                <span class="field-error NameError"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <p class="text-center">Seçenekler</p>
                        </div>
                        <div id="optionarea">
                            <div class="form-group row">
                                <label for="optionA" class="col-sm-2 col-form-label">A)</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="optionA" name="optionA">
                                    <span class="field-error NameError"></span>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="optionB" class="col-sm-2 col-form-label">B)</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="optionB" name="optionB">
                                    <span class="field-error NameError"></span>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="optionC" class="col-sm-2 col-form-label">C)</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="optionC" name="optionC">
                                    <span class="field-error NameError"></span>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="optionD" class="col-sm-2 col-form-label">D)</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="optionD" name="optionD">
                                    <span class="field-error NameError"></span>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="optionE" class="col-sm-2 col-form-label">E)</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="optionE" name="optionE">
                                    <span class="field-error NameError"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Kapat</button>
                        <button type="submit" class="btn btn-success">Kaydet</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="modal fade" id="editQuestionModal" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Soru Düzenle</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form id="editQuestionForm">
                    <div class="modal-body">
                        <div class="form-group row">
                            <label for="title" class="col-sm-2 col-form-label">Soru</label>
                            <div class="col-sm-10">
                                <textarea class="form-control" id="editTitle" rows="3"></textarea>
                                <span class="field-error NameError"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <p class="text-center">Seçenekler</p>
                        </div>
                        <div id="editoptionarea">
                            <div class="form-group row">
                                <label for="editOptionA" class="col-sm-2 col-form-label">A)</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="editOptionA" option-id="" name="editOptionA">
                                    <span class="field-error NameError"></span>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="editOptionB" class="col-sm-2 col-form-label">B)</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="editOptionB" option-id="" name="editOptionB">
                                    <span class="field-error NameError"></span>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="editOptionC" class="col-sm-2 col-form-label">C)</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="editOptionC" option-id="" name="editOptionC">
                                    <span class="field-error NameError"></span>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="editOptionD" class="col-sm-2 col-form-label">D)</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="editOptionD" option-id="" name="editOptionD">
                                    <span class="field-error NameError"></span>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label for="editOptionE" class="col-sm-2 col-form-label">E)</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="editOptionE" option-id="" name="editOptionE">
                                    <span class="field-error NameError"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Kapat</button>
                        <button type="submit" class="btn btn-success">Kaydet</button>
                        @*<a id="btnEditSave" class="btn btn-success">Kaydet</a>*@

                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script type="text/javascript">
        var Role = @(User.IsInRole("Admin") ? "true" : "false");


        $(document).ready(function () {
            getQuestionData(1);
            var cardsContainer = $(".card");
            cardsContainer.on('click', '.btnRejectQuestion', function () {
                var id = parseInt($(this).attr("question-id"));
                $.ajax({
                    type: "PUT",
                    url: "/Question/RejectQuestion/" + id,
                    success: function (response) {

                        if (response.isSuccess) {
                            Swal.fire({
                                title: 'Başarılı !',
                                text: response.message,
                                icon: 'success',
                                timer: 2000,
                                showConfirmButton: false
                            }).then(function () {
                                getQuestionData(1);
                            });
                        } else {
                            Swal.fire({
                                title: 'Başarısız !',
                                text: response.message,
                                icon: 'error',
                                showCancelButton: true,
                                cancelButtonText: "Kapat"
                            })

                        }
                    },
                    error: function (error) {
                        console.error(error); // Hata durumunu işleyin
                    }
                });

            });
            cardsContainer.on('click', '.btnApproveQuestion', function () {
                var id = parseInt($(this).attr("question-id"));
                $.ajax({
                    type: "PUT",
                    url: "/Question/ApproveQuestion/" + id,
                    success: function (response) {

                        if (response.isSuccess) {
                            Swal.fire({
                                title: 'Başarılı !',
                                text: response.message,
                                icon: 'success',
                                timer: 2000,
                                showConfirmButton: false
                            }).then(function () {
                                getQuestionData(1);
                            });
                        } else {
                            Swal.fire({
                                title: 'Başarısız !',
                                text: response.message,
                                icon: 'error',
                                showCancelButton: true,
                                cancelButtonText: "Kapat"
                            })

                        }
                    },
                    error: function (error) {
                        console.error(error); // Hata durumunu işleyin
                    }
                });

            });



            cardsContainer.on('click', '.btnRemoveQuestion', function () {
                var id = parseInt($(this).attr("question-id"));
                Swal.fire({
                    title: 'Silmek istediğinize misiniz?',
                    text: "Bu işlem geri alınamaz!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sil',
                    cancelButtonText: 'Kapat'

                }).then((result) => {
                    if (result.isConfirmed) {
                        // Kullanıcı "Yes" düğmesine tıkladığında AJAX isteği gönderin
                        $.ajax({

                            url: '/Question/DeleteQuestion/'+id, // Silme işlemini gerçekleştireceğiniz API endpoint'i
                            type: 'PUT', // Silme işlemi için HTTP DELETE isteği kullanabilirsiniz
                            success: function (response) {
                                if (response.isSuccess){
                                    Swal.fire({
                                        title: 'Başarılı !',
                                        text: 'Silme işlemi başarılı.',
                                        icon: 'success',
                                        showConfirmButton: false
                                    });

                                    setTimeout(function () {
                                        location.reload();
                                    }, 2000);
                                }
                                else{
                                    Swal.fire(
                                        'Hata!',
                                        'İşlem sırasında bir hata oluştu !',
                                        'error'
                                    );
                                }
                               
                            },
                            error: function (xhr, status, error) {
                                Swal.fire(
                                    'Hata!',
                                    'İşlem sırasında bir hata oluştu !',
                                    'error'
                                );
                            }
                        });
                    }
                });


            });

            cardsContainer.on('click', '.btnEditQuestion', function () {
                $('#editQuestionModal').modal('show');
                var id = parseInt($(this).attr("question-id"));
                $.ajax({
                    url: '/Question/GetQuestionById/' + id, // Endpoint URL'si
                    type: 'GET', // HTTP GET isteği
                    dataType: 'json', // Gelen veri tipi JSON
                    success: function (data) {
                        console.log(data);
                        $("#editTitle").val(data.questionText);
                        $("#editOptionA").val(data.questionOptions[0].optionText);
                        $("#editOptionA").attr("option-id", data.questionOptions[0].id);

                        $("#editOptionB").val(data.questionOptions[1].optionText);
                        $("#editOptionB").attr("option-id", data.questionOptions[1].id);
                        $("#editOptionC").val(data.questionOptions[2].optionText);
                        $("#editOptionC").attr("option-id", data.questionOptions[2].id);
                        $("#editOptionD").val(data.questionOptions[3].optionText);
                        $("#editOptionD").attr("option-id", data.questionOptions[3].id);
                        $("#editOptionE").val(data.questionOptions[4].optionText);
                        $("#editOptionE").attr("option-id", data.questionOptions[4].id);

                    },
                    error: function (error) {
                        // Hata durumunda burası çalışır
                        console.error('Hata:', error);
                    }
                });

                $('#editQuestionForm').submit(function (e) {
                    e.preventDefault(); // Formun normal gönderimini engelle

                    var questionText = $("#editTitle").val();
                    var editOptionA = $("#editOptionA").val().trim();
                    var editOptionB = $("#editOptionB").val().trim();
                    var editOptionC = $("#editOptionC").val().trim();
                    var editOptionD = $("#editOptionD").val().trim();
                    var editOptionE = $("#editOptionE").val().trim();

                    if (questionText.trim() == "") {

                        toastr.error("Soru boş geçilemez !");
                        return false;
                    }
                    if (editOptionA == "" || editOptionB == "" || editOptionC == "" || editOptionD == "" || editOptionE == "") {
                        toastr.error("Seçenekler boş geçilemez !");
                        return false;
                    }
                    var questionOptions = [];
                    $("#editoptionarea input").each(function (index, input) {
                        var inputValue = $(input).val();
                        var optionId = $(input).attr("option-id"); // inputun option-id'sini alın

                        // Her bir input alanının değerini ve option-id'sini bir JSON nesnesi olarak oluşturun
                        var option = {
                            Id: optionId, // option-id'yi id olarak atayın
                            OptionText: inputValue // Input değeri OptionText'e atanıyor
                        };

                        // Oluşturulan JSON nesnesini questionOptions dizisine ekleyin
                        questionOptions.push(option);
                    });

                    var data = {
                        Id: id,
                        QuestionText: questionText,
                        QuestionOptions: questionOptions
                    };
                    console.log(data);
                    $.ajax({
                        type: "PUT",
                        url: "/Question/UpdateQuestion",
                        data: data,
                        success: function (response) {
                            if (response.isSuccess) {
                                // Silme işlemi başarılı olduğunda SweetAlert ile bilgilendirme yapabilirsiniz
                                Swal.fire({
                                    title: 'Başarılı !',
                                    text: response.message,
                                    icon: 'success',
                                    timer: 2000,
                                    showConfirmButton: false
                                }).then(function () {
                                    getQuestionData(1);
                                    $("#editQuestionModal").find('form')[0].reset(); // Eğer bir form varsa
                                    // Modalı gizleme
                                    $("#editQuestionModal").modal('hide');
                                });
                            }
                            else {
                                // Silme işlemi başarısız olduğunda SweetAlert ile hata mesajı gösterebilirsiniz
                                Swal.fire({
                                    title: 'Başarısız !',
                                    text: response.message,
                                    icon: 'error',
                                    showCancelButton: true, // Kullanıcıya uyarıyı kapatma seçeneği sunar
                                    cancelButtonText: "Kapat", // Kapatma düğmesinin metni
                                }).then(function () {
                                    $("#editQuestionModal").find('form')[0].reset(); // Eğer bir form varsa
                                    $("#editQuestionModal").modal('hide');
                                });
                            }
                        },
                        error: function (error) {
                            console.error(error); // Hata durumunu işleyin
                        }
                    });
                });
            });

            $("#btnNew").click(function () {

                $('#addQuestionModal').modal('show');
                var optionValues = {};
                var questionOptions = [];
                $('#addQuestionForm').submit(function (e) {
                    e.preventDefault(); // Formun normal gönderimini engelle
                    var questionText = $("#title").val();
                    var optionA = $("#optionA").val().trim();
                    var optionB = $("#optionB").val().trim();
                    var optionC = $("#optionC").val().trim();
                    var optionD = $("#optionD").val().trim();
                    var optionE = $("#optionE").val().trim();

                    if (questionText.trim() == "") {

                        toastr.error("Soru boş geçilemez !");
                        return false;
                    }
                    if (optionA == "" || optionB == "" || optionC == "" || optionD == "" || optionE == "") {
                        toastr.error("Seçenekler boş geçilemez !");
                        return false;
                    }
                    // Her bir input alanını temsil eden JSON nesnelerini questionOptions dizisine ekleyin
                    $("#optionarea input").each(function (index, input) {
                        var inputValue = $(input).val();

                        // Her bir input alanının değerini bir JSON nesnesi olarak oluşturun
                        var option = {
                            OptionText: inputValue // Input değeri OptionText'e atanıyor
                        };

                        // Oluşturulan JSON nesnesini questionOptions dizisine ekleyin
                        questionOptions.push(option);
                    });

                    var data = {
                        QuestionText: questionText,
                        QuestionOptions: questionOptions
                    };

                    $.ajax({
                        type: "POST",
                        url: "/Question/AddQuestion",
                        data: data,
                        success: function (response) {
                            if (response.isSuccess) {
                                // Silme işlemi başarılı olduğunda SweetAlert ile bilgilendirme yapabilirsiniz
                                Swal.fire({
                                    title: 'Başarılı !',
                                    text: response.message,
                                    icon: 'success',
                                    timer: 2000,
                                    showConfirmButton: false
                                }).then(function () {
                                    getQuestionData(1);
                                    $("#addQuestionModal").find('form')[0].reset(); // Eğer bir form varsa
                                    // Modalı gizleme
                                    $("#addQuestionModal").modal('hide');
                                });
                            }
                            else {
                                // Silme işlemi başarısız olduğunda SweetAlert ile hata mesajı gösterebilirsiniz
                                Swal.fire({
                                    title: 'Başarısız !',
                                    text: response.message,
                                    icon: 'error',
                                    showCancelButton: true, // Kullanıcıya uyarıyı kapatma seçeneği sunar
                                    cancelButtonText: "Kapat", // Kapatma düğmesinin metni
                                }).then(function () {
                                    $("#addQuestionModal").find('form')[0].reset(); // Eğer bir form varsa
                                    $("#addQuestionModal").modal('hide');
                                });
                            }
                        },
                        error: function (error) {
                            console.error(error); // Hata durumunu işleyin
                        }
                    });
                });


            })
            // Sayfa numaralarına tıklandığında ilgili sayfadaki verileri al
            $('.pagination').on('click', '.sayfa', function () {
                var sayfaNo = $(this).data('sayfano');
                getQuestionData(sayfaNo);
            });
        });
        function getQuestionData(page) {
            var pageSize = 6;
            $.ajax({
                url: '/Question/GetQuestion',
                type: 'GET',
                data: { SayfaNo: page, pageSize: pageSize }, // Sayfa numarasını ve sayfa boyutunu gönder
                success: function (result) {
                    var questionListContainer = $('#QuestionListContainer');
                    questionListContainer.empty();
                    var htmlContent = "";
                    $.each(result.data, function (index, question) {
                        var htmlContent = "<div class='col-md-4'>" +
                            "<div class='card mb-4 border-bottom-primary'>" +
                            "<div class='card-header p-2'>";
                        if (Role) {
                            htmlContent += "<div class='float-right'>" +
                                "<a class='btn btn-warning btn-sm btnEditQuestion ml-2' style='color:black; font-size:12px' question-id='" + question.id + "'><i class='far fa-edit'></i>&nbsp; Düzenle</a>" +
                                "<a class='btn btn-danger btn-sm btnRemoveQuestion ml-2' style='font-size:12px' question-id='" + question.id + "'><i class='fas fa-trash'></i>&nbsp; Sil</a>" +
                                "</div>";
                            if (question.status == 1) {
                                htmlContent += "<div class='float-left'>" +
                                    "<a class='btn btn-circle btn-primary btn-sm btnApproveQuestion' data-toggle='tooltip' title='Onayla' style='font - size: 12px' question-id='" + question.id + "'><i class='fas fa-check'></i></a>" +
                                    "</div>" +
                                    "<div class='float-left'>" +
                                    "<a class='btn btn-circle btn-secondary btn-sm btnRejectQuestion ml-2' data-toggle='tooltip' title='Reddet' style='font - size: 12px' question-id='" + question.id + "'><i class='fas fa-times'></i></a>" +
                                    "</div>";
                            }

                        }
                        else {
                            htmlContent += "<div class='col-md-12'>&nbsp;&nbsp;</div>";
                        }

                        htmlContent += "</div>" +
                            "<div class='card-body p-3'>" +
                            "<h7 style='font-weight:bold'>" + question.questionText + "</h7>" +
                            "<ul class='pl-1 mt-2'>";
                        var optionLetter = 'A';
                        $.each(question.questionOptions, function (index, option) {
                            var optionText = optionLetter + ") " + option.optionText;
                            htmlContent += "<li style='font-size:14px; list-style: none;'>" +
                                "<label for='option-" + option.id + "'>" + optionText + "</label>" +
                                "</li>";
                            optionLetter = String.fromCharCode(optionLetter.charCodeAt(0) + 1);


                        });

                        htmlContent += "</ul> <div class='row'>";
                        if (question.status === 1) {
                            htmlContent += "<div class='col-md-6'><span class='badge badge-warning'> Onay Bekliyor </span></div>";
                        } else if (question.status === 2) {
                            htmlContent += "<div class='col-md-6'><span class='badge badge-success'> Onaylandı </span></div>";
                        }
                        else if (question.status === 3) {
                            htmlContent += "<div class='col-md-6'><span class='badge badge-danger'>Reddedildi </span></div>";
                        }
                        if (Role) {
                            htmlContent += "<div class='col-md-6'><span class='font-weight-bold' style='margin-left:auto;font-size:12px'> Ekleyen : " + question.appUser.name + " " + question.appUser.surname + " - " + moment(question.createdDate).format("DD.MM.YYYY") + "</span></div>";
                        }
                        htmlContent += "</div></div>" +
                            "</div>" +
                            "</div>";

                        questionListContainer.append(htmlContent);


                    });

                    var totalPages = result.totalPages;
                    updatePageNumbers(totalPages, page);
                }
            });
        }
        function updatePageNumbers(totalPages, currentPage) {
            // Sayfa numaralarını güncelleyin
            var pagination = $('.pagination');
            pagination.empty();

            for (var i = 1; i <= totalPages; i++) {
                var activeClass = (i === currentPage) ? 'active' : '';
                pagination.append('<li class="page-item"><a href="#" class="sayfa page-link" ' + activeClass + '" data-sayfano="' + i + '">' + i + '</a></li>');

            }
        }


    </script>
}